---

- name: Check to see if rvm is installed
  stat:
    path: "/Users/{{ ansible_user_id }}/.rvm"
  register: rvm_path
  changed_when: false

- name: Install rvm
  shell: >
    \curl -sSL https://get.rvm.io | bash -s stable --ruby --ignore-dotfiles
  when: "rvm_install and ((rvm_path.stat.isdir is not defined) or (not rvm_path.stat.isdir))"
  register: rvm_install_exec

- name: Ensure .rvm_profile exists with rvm sourcing
  lineinfile:
    dest: "/Users/{{ ansible_user_id }}/.rvm_profile"
    create: yes
    line: '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"'

- include_tasks: profile-sourcing.yml
  when: ruby_maintain_profile_sourcing

- name: Get list of standard known rubies
  shell: >
    . /Users/{{ ansible_user_id }}/.rvm/scripts/rvm && rvm ls known strings | grep -E "^ruby-[0-9]"
  register: rvm_known_rubies
  changed_when: false

- name: Get list of installed rubies
  shell: >
    . /Users/{{ ansible_user_id }}/.rvm/scripts/rvm && rvm ls rubies strings
  register: rvm_installed_rubies
  changed_when: false

- name: Get current default ruby version
  shell: >
    . /Users/{{ ansible_user_id }}/.rvm/scripts/rvm && rvm current
  register: rvm_current_default_ruby
  changed_when: false

- set_fact:
    stable_ruby_version: "{{ rvm_known_rubies.stdout_lines[0] }}"

- name: Install ruby versions
  shell: >
    . /Users/{{ ansible_user_id }}/.rvm/scripts/rvm && rvm install {{ stable_ruby_version if item == 'stable' else (item | regex_replace('^([0-9].*)', 'ruby-\1')) }}
  register: rvm_ruby_install
  with_items: "{{ ruby_versions }}"
  when: "((stable_ruby_version if item == 'stable' else (item | regex_replace('^([0-9].*)', 'ruby-\\1'))) not in rvm_installed_rubies.stdout_lines)"

- set_fact:
    use_ruby_version: "{{ stable_ruby_version if ruby_default_version == 'stable' else (ruby_default_version | regex_replace('^([0-9].*)', 'ruby-\\1')) }}"

# NOTE: maybe TODO, the use part of this doesn't actually work for the current session running this, requires opening a new terminal window
- name: Set default ruby
  shell: >
    . /Users/{{ ansible_user_id }}/.rvm/scripts/rvm && rvm use {{ use_ruby_version }} --default
  when: "(use_ruby_version != None) and (use_ruby_version != rvm_current_default_ruby.stdout)"
