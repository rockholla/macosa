---

- name: Make sure .bash_profile is setup
  lineinfile:
    dest: ~/.bash_profile
    create: yes
    line: "{{ item }}"
    insertbefore: BOF
  with_items:
    - "[[ -s ~/.profile ]] && source ~/.profile"
    - "[[ -s ~/.bash_aliases ]] && source ~/.bash_aliases"
    - "export PATH=/usr/local/bin:/usr/local/sbin:~/.macosa/bin:~/.macosa/user/bin:$PATH"
  tags: [ dotfiles ]

- name: Copy dotfile blocks to ~/
  blockinfile:
    marker: "# {mark} MacOSa managed block"
    dest: "~/{{ item.split('/')[-1] }}"
    create: yes
    block: "{{ lookup('file', item) }}"
    insertbefore: BOF
  when: "(item.split('/')[-1] != '.keep')"
  with_fileglob:
    - "{{ playbook_dir }}/user/blocks/dotfiles/.*"
  tags: [ dotfiles ]

- name: Get current account avatar
  command: >
    dscl . read /Users/{{ ansible_user_id }} Picture
  register: "current_account_avatar"
  when: "account.avatar_path != None"
  changed_when: false
  tags: [ avatar ]

- name: Set account avatar
  command: >
    {{ playbook_dir }}/bin/macosa_setaccountavatar {{ ansible_user_id }} {{ account.avatar_path }}
  become: yes
  when: "(account.avatar_path != None) and (account.avatar_path not in current_account_avatar.stdout)"
  tags: [ avatar ]

- name: Ensure .ssh directory exists.
  file:
    dest: "/Users/{{ ansible_user_id }}/.ssh"
    mode: 0700
    state: directory
  tags: [ ssh ]

- name: Write ssh config
  copy:
    content: "{{ ssh['config'] }}"
    dest: "/Users/{{ ansible_user_id }}/.ssh/config"
    mode: 0600

- name: Write ssh private key files
  copy:
    content: "{{ item.private }}"
    dest: "/Users/{{ ansible_user_id }}/.ssh/{{ item.name }}"
    mode: 0600
  with_items: "{{ ssh['keys'] }}"

- name: Write ssh public key files
  copy:
    content: "{{ item.public }}"
    dest: "/Users/{{ ansible_user_id }}/.ssh/{{ item.name }}.pub"
    mode: 0644
  when: item.public is defined
  with_items: "{{ ssh['keys'] }}"
