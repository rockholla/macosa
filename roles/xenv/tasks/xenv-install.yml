---

- name: Ensure {{ xenv_name }} is installed
  homebrew:
    name: "{{ xenv_name }}"
    state: present

- name: Get stable version of {{ xenv_language_name }}
  shell: >
    {{ xenv_name }} install --list | awk '{print $1}' | grep '^\d\.\d\.\d$' | tail -1
  register: xenv_stable_version
  changed_when: false

- name: Install {{ xenv_language_name }} versions
  shell: >
    {{ xenv_name }} install -s {{ xenv_stable_version.stdout|trim if item == 'stable' else item }}
  register: xenv_version_install
  changed_when: "'Installed' in xenv_version_install"
  with_items: "{{ xenv_versions }}"

- set_fact:
    _xenv_default_version: "{{ xenv_stable_version.stdout|trim if xenv_default_version == 'stable' else xenv_default_version }}"

- name: Get the current global {{ xenv_language_name }} version
  command: >
    {{ xenv_name }} global
  register: current_xenv_default_version
  changed_when: false

- name: Set the global {{ xenv_language_name }} version
  shell: >
    {{ xenv_name }} global {{ _xenv_default_version }}
  when: current_xenv_default_version.stdout|trim != _xenv_default_version

- name: Ensure {{ xenv_name }} .bash_profile block is present
  blockinfile:
    marker: "# {mark} MacOSa managed block {{ xenv_name }}"
    dest: "/Users/{{ ansible_user_id }}/.bash_profile"
    create: yes
    block: |
      eval "$({{ xenv_name }} init -)"
      {{ xenv_profile_block }}
    state: present

- name: Install {{ xenv_language_name }} packages for each installed version
  shell: >
    if ! {{ xenv_package_check_command }} {{ item[1] }}; then
      eval "$({{ xenv_name }} init -)" && {{ xenv_name }} shell {{ xenv_stable_version.stdout|trim if item[0] == 'stable' else item[0] }} && {{ xenv_package_install_command }} {{ item[1] }}
      echo "package installed"
    fi
  register: xenv_package_install
  with_nested:
    - "{{ xenv_versions }}"
    - "{{ xenv_packages }}"
  changed_when: "'package installed' in xenv_package_install.stdout"
