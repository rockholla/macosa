---
- hosts: macos
  connection: local
  become: no

  pre_tasks:

    - name: Include default variables
      include_vars:
        dir: vars
      tags: [ always ]

    - name: Include user-supplied variables
      include_vars:
        dir: user/vars
        ignore_files: [ ".keep", ".example" ]
      tags: [ always ]

    - name: Get a list of all user-supplied pre tasks to include
      find:
        paths: "{{ playbook_dir }}/user/tasks/pre"
        patterns: "*.yml"
      register: user_pre_tasks
      changed_when: false
      tags: [ always ]

    - name: Include user-supplied pre tasks
      include: "{{ item.path }}"
      with_items: "{{ user_pre_tasks.files }}"

  roles:

    - { role: homebrew, when: "'homebrew' in _roles", tags: [ homebrew ] }
    - { role: python, when: "'python' in _roles", tags: [ python ] }
    - { role: node, when: "'node' in _roles", tags: [ node ] }
    - { role: ruby, when: "'ruby' in _roles", tags: [ ruby ] }
    - { role: browsers, when: "'browsers' in _roles", tags: [ browsers ] }
    - { role: aws, when: "'aws' in _roles", tags: [ aws ] }
    - { role: projects, when: "'projects' in _roles", tags: [ projects ] }
    - { role: user, when: "'user' in _roles", tags: [ user ] }
    - { role: system, when: "'system' in _roles", tags: [ system ] }

  tasks:

    - name: Get a list of all user-supplied post tasks to include
      find:
        paths: "{{ playbook_dir }}/user/tasks/post"
        patterns: "*.yml"
      register: user_post_tasks
      changed_when: false
      tags: [ always ]

    - name: Include user-supplied post tasks
      include: "{{ item.path }}"
      with_items: "{{ user_post_tasks.files }}"

    - name: Look for MacOSa install source
      stat:
        path: "{{ macosa_install_source }}"
      register: macosa_install_source_check
      tags: [ always ]

    - name: Syncing MacOSa install back to install source (if available)
      synchronize:
        src: "/Users/{{ ansible_user_id }}/.macosa/"
        dest: "{{ macosa_install_source }}/"
        delete: yes
      when: "macosa_install_source_check.stat.exists"
      tags: [ always ]
