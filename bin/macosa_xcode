#!/bin/bash

# Install Xcode or Xcode cli tools

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
downloads_directory="$( cd "$this_dir/../.downloads" && pwd )"
install_type="${1:-tools}"
source "$this_dir/macosa_functions"

os_version=$(get_os_version)
os_major_version=$(get_version_part "$os_version" "major")
os_minor_version=$(get_version_part "$os_version" "minor")

function xcode_tools() {
  wait_type="$1"
  say "To continue, please click install in the following popup window"
  # Prompt user to install the XCode Command Line Tools
  xcode-select --install &>/dev/null

  # Wait until the XCode Command Line Tools are installed
  if [[ "$wait_type" == "until_prompt" ]]; then
    say "When the tools install process is finished, let us know"
    done_installing_tools=false
    until $done_installing_tools; do
      read -rp $'\033[33mAre you finished with the Xcode tools install? [Y/n] \033[0m' response
      case "$response" in
        [yY][eE][sS]|[yY])
          done_installing_tools=true
          ;;
        *)
          done_installing_tools=false
          ;;
      esac
    done
  else
    until xcode-select --print-path &>/dev/null; do
      sleep 5
    done
  fi
}

if [[ $install_type == "tools" ]]; then

  if ! xcode-select --print-path &>/dev/null; then
    printf "Installing Xcode tools...\n"

    xcode_tools "until_installed"

    printf "Xcode tools are finished installing.\n"
  else
    printf "Xcode tools are already installed\n"
  fi

elif [[ "$install_type" == "full" ]]; then

  # Mount and install
  if [ ! -d /Applications/Xcode.app ]; then
    say "You have selected to install the full Xcode application. We can help you download and install it automatically, please reed the following and respond to continue"
    read -rp $'\033[33mWe can try to download Xcode for you automatically, but you need to make sure you don\'t have two-factor authentication turned on for your Apple ID (https://appleid.apple.com/account/manage) and have access to Apple Developer resources. Once you do so, we can start the download and install. Do you want to continue? [Y/n] \033[0m' response
    case "$response" in
      [yY][eE][sS]|[yY])
        (
          continue=false
          until $continue; do
            read -p "What version of Xcode would you like to install? (must be greater than version 8, enter a value like '8.3.3' or '9') " xcode_version
            printf "You'll need to input your Apple ID and password in order to authenticate to the Apple Download Center:\n"
            read -p "Your Apple ID: " apple_id
            read -s -p "Your Apple ID password: " apple_id_password
            printf "\nDownloading Xcode...\n"
            if $this_dir/macosa_xcode_download "$apple_id" "$apple_id_password" "$xcode_version" "$downloads_directory"; then
              continue=true
            else
              say "There was a problem downloading Xcode automatically, you should see the error here. Let us know how you would like to continue"
              read -rp $'\033[31mThere was a problem downloading Xcode automatically, would you like to try again (if this is simply a network issue, the download will pick up where it left off)? [Y/n] \033[0m' try_again
              case "$try_again" in
                [yY][eE][sS]|[yY])
                  continue=false
                  ;;
                *)
                  printf "\033[33mOK, moving on despite the failure. It shouldn't cause any issues for the rest of the MacOSa install process. You can download/install it yourself at any time by heading to the download center at https://developer.apple.com/download/more/\033[0m\n"
                  continue=true
              esac
            fi
          done
        )
        ;;
      *)
        printf "\033[33mOK, not downloading/installling Xcode automatically. It shouldn't cause any issues for the rest of the MacOSa install process. You can download/install it yourself at any time by heading to the download center at https://developer.apple.com/download/more/\033[0m\n"
        ;;
    esac

    printf "Installing Xcode...\n"

    if [ ! -s /tmp/Xcode.app ]; then
      xcode_download_filename=$(cat $this_dir/.tmp/xcode_download_filename)
      rsync "$downloads_directory/$xcode_download_filename" /tmp/
      open "/tmp/$xcode_download_filename"
      printf "Waiting for Xcode xip to be extracted...\n"
      until [ -s /tmp/Xcode.app ]; do
        sleep 5
      done
    fi
    printf "Installing extracted Xcode.app to Applications...\n"
    echo $(cat ~/.macosa/.vaultpass) | sudo -S rsync -a /tmp/Xcode.app/ /Applications/Xcode.app &
    sleep 2
    printf " the installation of all Xcode files might take a little while...\n"
    wait
    rm "/tmp/$xcode_download_filename"

    printf "Automatically accepting the Xcode license\n"
    echo $(cat ~/.macosa/.vaultpass) | sudo -S xcodebuild -license accept 2>/dev/null

    # even though we just installed the full Xcode app, it seems this tools install is necessary for cli tools compatibility
    xcode_tools "until_prompt"

    printf "\033[32mXcode is finished installing.\033[0m\n"
  else
    printf "Xcode application is already installed\n"
  fi

else
  printf "\033[33mWARNING: Invalid install type $install_type...ignorning\033[0m\n"
fi
